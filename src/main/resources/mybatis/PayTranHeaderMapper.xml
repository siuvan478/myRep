<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.asgab.repository.PayTranHeaderMapper">

	<select id="get" parameterType="long" resultType="PayTranHeader">
		SELECT tranNum,tranDate,currency,email,totalAmount,status,deleted,remarks,description,createDate,createBy,updateDate,updateBy
		FROM ss_pay_tran_header where deleted=1 and tranNum=#{tranNum}
	</select>

	<select id="search" parameterType="map" resultType="PayTranHeader">
		SELECT tranNum,tranDate,currency,email,totalAmount,status,deleted,remarks,description,createDate,createBy,updateDate,updateBy
		FROM ss_pay_tran_header where deleted = 1
		<if test="tranStartDate != null">
			<![CDATA[
			and date_format(tranDate,'%Y-%c-%d') >= #{tranStartDate} 
			]]>
		</if>
		<if test="tranEndDate != null">
			<![CDATA[
			and date_format(tranDate,'%Y-%c-%d') <= #{tranEndDate}
			]]> 
		</if>
		<if test="email != null">
			and email like "%"#{email}"%"
		</if>
		<if test="tranNum != null">
			and tranNum = #{tranNum}
		</if>
		<if test="status != null and status != ''">
			and (status =#{status} or 0 = #{status})
		</if>
		<if test="sort != null and sort!=''">
			order by ${sort}
		</if>
	</select>
	
	<select id="count" parameterType="map" resultType="int">
		select count(1) 
		from ss_pay_tran_header where deleted = 1
		<if test="tranStartDate != null">
			<![CDATA[
			and date_format(tranDate,'%Y-%c-%d') >= #{tranStartDate} 
			]]>
		</if>
		<if test="tranEndDate != null">
			<![CDATA[
			and date_format(tranDate,'%Y-%c-%d') <= #{tranEndDate}
			]]> 
		</if>
		<if test="email != null">
			and email like "%"#{email}"%"
		</if>
		<if test="tranNum != null">
			and tranNum = #{tranNum}
		</if>
		<if test="status != null and status != ''">
			and (status =#{status} or 0 = #{status})
		</if>
	</select>

	<insert id="save" parameterType="PayTranHeader" useGeneratedKeys="true" keyProperty="tranNum">
		insert into ss_pay_tran_header (
		tranDate,currency,email,totalAmount,status,deleted,remarks,description,createDate,createBy)
		values (
		#{tranDate},#{currency},#{email},#{totalAmount},#{status},1,#{remarks},#{description},#{createDate},#{createBy})
	</insert>
	
	<insert id="update" parameterType="PayTranHeader">
		update ss_pay_tran_header set 
		tranDate=#{tranDate},
		currency=#{currency},
		email=#{email},
		totalAmount=#{totalAmount},
		status=#{status},
		deleted=#{deleted},
		remarks=#{remarks},
		description=#{description},
		updateDate=#{updateDate},
		updateBy=#{updateBy}
		where tranNum = #{tranNum}
	</insert>
	
	<!-- 删除用户 -->
	<delete id="delete" parameterType="long">
	     update ss_pay_tran_header set deleted=2 where tranNum = #{tranNum}
	</delete>
	
	<!-- 报表 - 客服付款信息 -->
	<select id="findCustPaymentInfos" parameterType="map" resultType="CustPaymentInfo">
		select  
			d.createDate as paymentDate, 
			c.custName as custName, c.advertiser as advertiser, c.custPort payerName,
			c.custPort as custPort, b.tranDate as topupDate,
			b.currency as currency,
			sum(a.amountInRMB) as convertToRMB,
			max(case when a.payCode = 1 then a.`additionAmount` else 0.00 END) as topupAmount,
			max(case when a.payCode = 2 then a.`additionAmount` else 0.00 END) as annualFeeAmount,
			max(case when a.payCode = 3 then a.`additionAmount` else 0.00 END) as acctCreateFeeAmount,
			max(case when a.payCode = 4 then a.`additionAmount` else 0.00 END) as guaranteeFeeAmount,
			sum(a.rewards) as discountAmount,
			sum(a.mgtFee) as mgtFeeAmount,
			c.remark1 as custRemark,
			e.curr_name as currencyNameZH,
			e.curr_code as currencyNameEN
		from 
			ss_pay_tran_detail a left join 
			ss_pay_tran_header b on a.tranNum = b.tranNum left join 
			ss_cust_master c on a.bdUsername = c.custUsername left join
			ss_process d on a.tranNum = d.paytranNum and d.status = 6 left join
			ss_curr_master e on b.currency = e.curr_code
		where EXISTS
		(
			select * from ss_process where paytranNum = a.tranNum and status = 6
		)
		<if test="advertiser != null">
			and c.advertiser like "%"#{advertiser}"%"
		</if>
		<if test="paymentDateStart != null and paymentDateEnd != null">
			and d.createDate BETWEEN #{paymentDateStart} and #{paymentDateEnd}
		</if>
		group by a.tranNum, a.`bdUserName`
		<if test="sort != null and sort!=''">
			order by ${sort}
		</if>
	</select>
	
	<select id="countCustPaymentInfos" parameterType="map" resultType="int">
		select  count(1) from (
			select  
				count(1)
			from 
				ss_pay_tran_detail a left join 
				ss_pay_tran_header b on a.tranNum = b.tranNum left join 
				ss_cust_master c on a.bdUsername = c.custUsername left join
				ss_process d on a.tranNum = d.paytranNum and d.status = 6
			where EXISTS
			(
				select * from ss_process where paytranNum = a.tranNum and status = 6
			)
			<if test="advertiser != null">
				and c.advertiser like "%"#{advertiser}"%"
			</if>
			<if test="paymentDateStart != null and paymentDateEnd != null">
				and d.createDate BETWEEN #{paymentDateStart} and #{paymentDateEnd}
			</if>
			group by a.tranNum, a.`bdUserName`
		)as temp
	</select>

</mapper> 
